// Generated by view binder compiler. Do not edit!
package com.example.projeto.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.projeto.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityFormCadastroBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton buttonCadastrar;

  @NonNull
  public final TextView cadastrarse;

  @NonNull
  public final View componentes;

  @NonNull
  public final EditText cpf;

  @NonNull
  public final EditText email2;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final EditText nome;

  @NonNull
  public final EditText senha2;

  private ActivityFormCadastroBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton buttonCadastrar, @NonNull TextView cadastrarse,
      @NonNull View componentes, @NonNull EditText cpf, @NonNull EditText email2,
      @NonNull ImageView imageView, @NonNull EditText nome, @NonNull EditText senha2) {
    this.rootView = rootView;
    this.buttonCadastrar = buttonCadastrar;
    this.cadastrarse = cadastrarse;
    this.componentes = componentes;
    this.cpf = cpf;
    this.email2 = email2;
    this.imageView = imageView;
    this.nome = nome;
    this.senha2 = senha2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFormCadastroBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFormCadastroBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_form_cadastro, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFormCadastroBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_cadastrar;
      AppCompatButton buttonCadastrar = ViewBindings.findChildViewById(rootView, id);
      if (buttonCadastrar == null) {
        break missingId;
      }

      id = R.id.cadastrarse;
      TextView cadastrarse = ViewBindings.findChildViewById(rootView, id);
      if (cadastrarse == null) {
        break missingId;
      }

      id = R.id.componentes;
      View componentes = ViewBindings.findChildViewById(rootView, id);
      if (componentes == null) {
        break missingId;
      }

      id = R.id.cpf;
      EditText cpf = ViewBindings.findChildViewById(rootView, id);
      if (cpf == null) {
        break missingId;
      }

      id = R.id.email2;
      EditText email2 = ViewBindings.findChildViewById(rootView, id);
      if (email2 == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.nome;
      EditText nome = ViewBindings.findChildViewById(rootView, id);
      if (nome == null) {
        break missingId;
      }

      id = R.id.senha2;
      EditText senha2 = ViewBindings.findChildViewById(rootView, id);
      if (senha2 == null) {
        break missingId;
      }

      return new ActivityFormCadastroBinding((ConstraintLayout) rootView, buttonCadastrar,
          cadastrarse, componentes, cpf, email2, imageView, nome, senha2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
